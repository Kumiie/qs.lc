#!/usr/bin/env ruby

# load module
require 'net/http'

# get id
user = IO.popen("whoami", "r+").gets.chomp # get users username
program = ARGV[0].to_s # get executable name
idfile = "/Users/#{user}/Library/qs.lc/id"
old_idfile = File.dirname(program) + "/qs.lc.app/Contents/Resources/id"

id = ''
if File.exist?(idfile) then
	id = File.read(idfile).chomp
elsif File.exist?(old_idfile) then
	id = File.read(old_idfile).chomp
end

# capture png file
tmpfile = "/tmp/image_upload#{$$}.png"
imagefile = ARGV[1] #support for drag and drop

if imagefile && File.exist?(imagefile) then
	# convert dragged image to png, to tmpfile location.
	system "sips -s format png \"#{imagefile}\" --out \"#{tmpfile}\""
else
	# screencapture, saved to tmpfile
	system "screencapture -i \"#{tmpfile}\""
	if File.exist?(tmpfile) then
		# downsize png
		system "sips -d profile --deleteColorManagementProperties \"#{tmpfile}\""	
	end
end

if !File.exist?(tmpfile) then
	exit # if there is no image to upload
end

imagedata = File.read(tmpfile)
File.delete(tmpfile)

# upload
boundary = '----BOUNDARYBOUNDARY----'

HOST = 'qs.lc'
CGI = '/s/0000.php'
UA	 = 'HTTP/1.1'

data = <<EOF
--#{boundary}\r
content-disposition: form-data; name="id"\r
\r
#{id}\r
--#{boundary}\r
content-disposition: form-data; name="imagedata"; filename="qs.lc"\r
\r
#{imagedata}\r
--#{boundary}--\r
EOF

header ={
	'Content-Length' => data.length.to_s,
	'Content-type' => "multipart/form-data; boundary=#{boundary}",
	'User-Agent' => UA
}

Net::HTTP.start(HOST,80){|http|
	res = http.post(CGI,data,header)
	url = res.response.body
	IO.popen("pbcopy","r+"){|io|
		io.write url
		io.close
	}
	system "open #{url}"

	# save id
	newid = res.response['X-Gyazo-Id']
	if newid and newid != "" then
		if !File.exist?(File.dirname(idfile)) then
			Dir.mkdir(File.dirname(idfile))
		end
		if File.exist?(idfile) then
			File.rename(idfile, idfile+Time.new.strftime("_%Y%m%d%H%M%S.bak"))
		end
		File.open(idfile,"w").print(newid)
		if File.exist?(old_idfile) then
			File.delete(old_idfile)
		end
	end
}
